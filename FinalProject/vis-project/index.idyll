[meta title:"ABC" description:"Short description of your project" /]

[Header
  fullWidth:true
  title:"ABC & Amazing Graphs"
  subtitle:"Mathematical Visualizations"
  author:"Davi Sales Barreira"
  authorLink:"https://github.com/davibarreira/Visualizations"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]


## Introduction
This project aims to explore visualizations in mathematics. The idea
is to create a "gallery" with different "collections", each exploring
a different mathematical topic. At the moment, I'm still deciding which
topic this project will focus on. There are two candidates and I might
end up doing both, depending on how much work turns out to be necessary.

## Tools
First, I plan to use this language (idyll) to write the iteractive web-page
and publish it. This is perfect from creating the so called "explorable
exaplanations".
I also plan to use Vega-Lite to generate most of my graphs with iterations.

## Topics
### 1. Approximate Bayesian Computation (ABC)
This is an algorithm created to estimate the posterior probability density.
Originally, it was proposed as a way of explaining how posterior
probabilities could be understood in the context of frequency sampling.
The idea originated from a paper of Donald Rubin in the 1980's, which
stated that a posterior can be obtained by choosing parameters from a prior,
simulating the sampling process of the real observations and accepting
the parameters only when the simulated sample matched the real one.

#### 1.1 Vision Ideas
The idea is to use iteractive visualizations coupled with equations
to try and explain how
the algorithm works using some toy models, in a way that a user
can change parameters and see the changes in real time.
The ABC algorithm has variations depending on the probability model
being simulated, so I'll create a visualization considering a case
with discrete data, and another with continuos data.
In the conclusion, the some parameters evaluating the performance of
the algorithm will be shown.

[aside]
##### Analytical Distribution
![quill](static/images/distributions.png)
[/aside]
Below there is an example of visualization I'm planning on doing.

[data name:"abcBeta" source:"ABC_Beta.csv" /]
[var name:"state" value:0 /]
[IdyllVegaLite data:abcBeta spec:`{
"hconcat" : [
  {
    "view":{"stroke" : null},
    "layer": [{


    "selection": {
      "brush": {"type": "interval","encodings": ["x"],"init":{"x": [3.6, 4.4]}}
    },
    "view":{"stroke" : null},
    "width": 250,
    "height": 200,
    "mark": "circle",
    "encoding": {
        "x": {"field": "x1", "type": "quantitative","axis": {"grid":false, "title":"X"}},
        "y": {"field": "x2", "type": "quantitative", "axis": null},
        "size":{"value":200},
        "color": {
              "condition": {"selection": "brush", "field": "x3", "type": "quantitative"},
              "value": "grey"
            }
        }
}]},
  {
    "layer":[{
    "transform": [
      {"filter": {"selection": "brush"}}
    ],
    "width": 250,
    "height": 200,
    "mark": "bar",
    "encoding": {
    "x": {
        "bin":{"maxbins":15},
        "field": "x3",
        "type": "quantitative"
    },
    "y": {
        "aggregate": "count",
        "type": "quantitative"
      }
    }}
    ]
}]
}` /]

#### 1.3 Vision Inspirations
Below there are two examples of "explorable explanations"
that motivated me (both using idyll).

* [Barnes-Hut Approximation](https://jheer.github.io/barnes-hut/)
* [Multi-Armed Banding Problem](https://cse442-17f.github.io/LinUCB/)

### 2. Amazing Graphs
This is based on [this video series](http://bit.ly/Amazing_Graphs) from
Numberphile. It's an exploration of different (and amazing) sequences
of integers. The sequences have "simple" recursion rules, but result
in some really astonishing visuals. The idea is to reproduce some
of the graphs (and perhaps others) shown in the video, and visualize them
with "artistic purposes". Also, use some iteractivity to let users explore
different aesthetic components, such as chaning colors and shapes.

#### 1.1 Vision Ideas
The idea is to produce "art from math", by using the sequences
of integers and building upon them.

##### Balanced Ternary
You write your number in base 3 and replace all the 2's to -1.

```julia
function Balanced_Ternary(n)
    if n==0
        return 0
    end
    if n%3 == 0
        return 3*Balanced_Ternary(n/3)
    elseif n%3 == 1
        return 3*Balanced_Ternary((n-1)/3)+1
    else
        return 3*Balanced_Ternary((n-2)/3) -1
    end
end
```

[data name:"bt" source:"bt.csv" /]
[var name:"state" value:0 /]
[IdyllVegaLite data:bt spec:`{
  "hconcat":[{

  "selection": {
    "grid": {
      "type": "interval", "bind": "scales"
    }},
  "mark": "area",
  "width": 600,
  "height": 400,
  "encoding": {
    "x": {"field": "ID", "type": "quantitative", "axis": {"grid":false}},
    "y": {"field": "S", "type": "quantitative", "axis":{"grid":false}},
    "color": {
      "value": "black"
    }
  }

},
{
  "selection": {
    "grid": {
      "type": "interval", "bind": "scales"
    }},
  "mark": {"type": "point", "shape":"triangle-down", "filled":true},
  "width": 600,
  "height": 400,
  "encoding": {
    "x": {"field": "ID", "type": "quantitative", "axis": {"grid":false}},
    "y": {"field": "S", "type": "quantitative", "axis":{"grid":false}},
    "color": {
      "field": "S", "type":"quantitative",
      "scale": {"type": "quantize","zero": true,"scheme": "inferno"}
    }
  }
}
]
}` /]

// ![quill](static/images/BalancedTernarySun.png)
// [image style:`{width: '100%'}` src:"static/images/BalancedTernarySun.png" /]
[FullWidth]
[div className:"figure"]
[img src:"static/images/BalancedTernarySun.png" width:"6000px"/]
[/div]
[/FullWidth]
