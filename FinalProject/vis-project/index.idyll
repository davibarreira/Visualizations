[meta title:"Mathematical Visualizations" description:"Short description of your project" /]

[Header
  fullWidth:true
  title:"Approximate Bayesian Computation (ABC)"
  subtitle:"Mathematical Visualizations"
  author:"Davi Sales Barreira"
  authorLink:"https://github.com/davibarreira/Visualizations"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]


## Introduction
This project aims to explore visualizations in mathematics. The idea
is to create a "gallery" with different "collections", each exploring
a different mathematical topic. At the moment, I'm still deciding which
topic this project will focus on. There are two candidates and I might
end up doing both, depending on how much work turns out to be necessary.

## Tools
First, I plan to use this language (idyll) to write the iteractive web-page
and publish it. This is perfect from creating the so called "explorable
exaplanations".
I also plan to use Vega-Lite to generate most of my graphs with iterations.

## Topics
### 1. Approximate Bayesian Computation (ABC)
This is an algorithm created to estimate the posterior probability density.
Originally, it was proposed as a way of explaining how posterior
probabilities could be understood in the context of frequency sampling.
The idea originated from a paper of Donald Rubin in the 1980's, which
stated that a posterior can be obtained by choosing parameters from a prior,
simulating the sampling process of the real observations and accepting
the parameters only when the simulated sample matched the real one.

#### 1.1 Vision Ideas
The idea is to use iteractive visualizations coupled with equations
to try and explain how
the algorithm works using some toy models, in a way that a user
can change parameters and see the changes in real time.
The ABC algorithm has variations depending on the probability model
being simulated, so I'll create a visualization considering a case
with discrete data, and another with continuos data.
In the conclusion, the some parameters evaluating the performance of
the algorithm will be shown.

Below there is an example of visualization I'm planning on doing.

[var name:"idSampler" value: 1 /]
[data name:"abcBeta" source:"ABC_Beta.csv" /]
[var name:"state" value:0 /]
[derived name:"nSucesses" value:`abcBeta.filter(c => c.x4 == idSampler)[0].x1` /]

We start with the sample  [display var:idSampler format:"d" /].
Running the simulation, we get [display var:nSucesses format:"d" /].

[button onClick:`idSampler++` style:`{padding: 10, background: '#ddd',
margin: '0 auto', display: 'block', cursor: 'pointer'}`]
Sample new coin
[/button]

[IdyllVegaLite data:abcBeta spec:`{
  "hconcat" : [
    {
      "layer":[{
      "width": 500,
      "height": 300,
      "mark":{"type":"area","line":true},
      "encoding": {
      "x": {
          "field": "x3",
          "type": "quantitative",
          "axis":{"grid":false,"title":"Coin Bias"}
      },
      "y": {
          "field": "x5",
          "type": "quantitative",
          "axis":{"grid":false},
          "scale":{"domain":[0,1.2]}
        }
      }},{
      "width": 500,
      "height": 300,
      "transform": [
        {"filter": {"field": "x4", "equal":idSampler}}
      ],
      "mark": {"type":"bar", "color":"orange"},
      "encoding": {
      "x": {
          "field": "x3",
          "type": "quantitative",
          "scale":{"domain":[0,1]},
              "axis":{"grid":false}
      },
      "y": {
          "field": "x5",
          "type": "quantitative",
          "title": "Prior Probability",
          "scale":{"domain":[0,1.2]}
        },
      "color":{"field":"x4","type":"nominal",
                "legend": {"orient": "top", "title": "Sampled Coin"},
                "scale": {
                "range": ["orange"]
                }}
              }
      }
      ]
  },
  {
      "width": 500,
      "height": 300,
      "transform": [
        {
          "filter":{"and":[{"field": "x1", "equal":6},
              {"field": "x4", "lte":idSampler}]
          }
      }],
      "mark": "bar",
      "encoding": {
      "x": {
          "scale":{"domain":[0,1]},
          "bin": {
              "binned": false,
              "step": 0.1},
          "field": "x3",
          "type": "quantitative",
          "axis":{"grid":false,"title":"Coin Bias"}
      },
      "y": {
          "aggregate": "count",
          "type": "quantitative",
          "title": "Count Samples Posterior",
          "axis":{"grid":false},
          "scale":{"domain":[0,10]}
        }
      }}
  ]
}` /]


[aside]
#####  Analytical Distribution
[br /]
![quill](static/images/distributions.png)
[/aside]

[var name:"numberBins" value:15 /]
[var name:"color" value:"gray" /]

// [data name:"abcBeta" source:"ABC_Beta.csv" /]
// [var name:"state" value:0 /]
[IdyllVegaLite data:abcBeta spec:`{
  "hconcat" : [
    {

      "view":{"stroke" : null},
      "layer": [{


      "selection": {
        "brush": {"type": "interval","encodings": ["x"],"init":{"x": [5.6, 6.4]}}
      },
      "view":{"stroke" : null},
      "width": 300,
      "height": 200,
      "mark": {"type": "bar","stroke": "black",
      "strokeWidth": 0.2},
      "encoding": {
          "x": {"field": "x1", "type": "quantitative","axis": {"grid":false, "title":"K (# sucesses)"},"scale":{"domain":[-0.1,8.1]}},
          "y": {"aggregate": "count","type": "quantitative", "axis": {"grid":false, "title":"Count Samples"}},
          "size":{"value":15},
          "color": {
                "condition": {"selection": "brush", "field": "x3", "type": "quantitative","title":"Coin Bias",
                "legend": {"orient": "top", "title": "Coin Bias"}
                              },
                "value": "grey"
              }
          }
  }]},
    {
      "layer":[{
      "transform": [
        {"filter": {"selection": "brush"}}
      ],
      "width": 300,
      "height": 200,
      "mark": "bar",
      "encoding": {
      "x": {
          "bin":{"maxbins":20},
          "field": "x3",
          "type": "quantitative", "axis":{"title":"Coin Bias"}
      },
      "y": {
          "aggregate": "count",
          "type": "quantitative",
          "title": "Count Samples"
        }
      }}
      ]
  }]
}` /]

// [action style:`{color:'red'}` onClick:`color='red'`]red[/action] [action style:`{color:'gray'}` onClick:`color='gray'`]green[/action] [action style:`{color:'#4682b4'}` onClick:`color='#4682b4'`]blue[/action]
